{"version":3,"sources":["firstface/login/app.js","firstface/register/app.js","firstface/App.js","secondface/form/app.js","secondface/App.js","App.js","serviceWorker.js","index.js"],"names":["LoginBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","e","setState","target","value","showFirst","react_default","a","createElement","className","htmlFor","type","name","placeholder","onChange","onUsernameChange","bind","onPasswordChange","onClick","submitLogin","Component","RegisterBox","email","onEmailChange","submitRegister","App","console","log","isLoginOpen","isRegisterOpen","showLoginBox","showRegisterBox","app","register_app","Form","title","description","InputChange","assertThisInitialized","Submit","exits","preventDefault","onAddTodo","alert","_e$target","defineProperty","showSecond","onSubmit","todos","upList","complet","index","window","confirm","filter","i","document","getElementById","hasAttribute","removeAttribute","setAttribute","todo","toConsumableArray","concat","_this2","map","key","priority","id","removelist","form_app","isFirstpage","isSecondpage","src_firstface_App","showFirstpage","src_secondface_App","showSecondpage","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ceac3b0c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass LoginBox extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {username:'',password:''};\r\n    }\r\n    onUsernameChange(e) {\r\n      this.setState({\r\n        username: e.target.value\r\n      });\r\n    }\r\n    onPasswordChange(e) {\r\n      this.setState({\r\n        password: e.target.value\r\n      });\r\n    }\r\n    submitLogin(e) {\r\n      this.props.showFirst();\r\n    }\r\n    render() {\r\n      return (\r\n        <div className=\"inner-container\">\r\n          <div className=\"header\">\r\n            Login\r\n          </div>\r\n          <div className=\"box\">\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                className=\"login-input\"\r\n                placeholder=\"Username\"\r\n                onChange = {\r\n                  this\r\n                  .onUsernameChange\r\n                  .bind(this)\r\n                }/>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                className=\"login-input\"\r\n                placeholder=\"Password\"\r\n                onChange = {\r\n                  this\r\n                  .onPasswordChange\r\n                  .bind(this)\r\n                }/>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"login-btn\"\r\n              onClick={this\r\n              .submitLogin\r\n              .bind(this)}>Login</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n  }\r\n  export default LoginBox;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass RegisterBox extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  onEmailChange(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n  onPasswordChange(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n  submitRegister(e) {\r\n    this.props.showFirst();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"inner-container\">\r\n        <div className=\"header\">\r\n          Register\r\n        </div>\r\n        <div className=\"box\">\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            < input type = \"text\"\r\n            name = \"email\"\r\n            className = \"login-input\"\r\n            placeholder = \"Email\"\r\n            onChange = {\r\n              this\r\n              .onEmailChange\r\n              .bind(this)\r\n            }/>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"login-input\"\r\n              placeholder=\"Password\"\r\n              onChange = {\r\n                this\r\n                .onPasswordChange\r\n                .bind(this)\r\n              }/>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"login-btn\"\r\n            onClick={this\r\n            .submitRegister\r\n            .bind(this)}>Register</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  export default  RegisterBox;\r\n","import React, {\n  Component\n} from 'react';\nimport './App.css';\nimport Login from './login/app';\nimport Register from './register/app';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    console.log(props);\n\n    this.state = {\n      isLoginOpen: true,\n      isRegisterOpen: false\n    };\n  }\n  showLoginBox() {\n    this.setState({isLoginOpen: true, isRegisterOpen: false});\n  }\n\n  showRegisterBox() {\n    this.setState({isRegisterOpen: true, isLoginOpen: false});\n  }\n  render() {\n\n    return ( <div className = \"root-container\" > \n    <div className=\"box-controller\">\n       <div\n         className={\"controller \" + (this.state.isLoginOpen\n         ? \"selected-controller\"\n         : \"\")}\n         onClick={this\n         .showLoginBox\n         .bind(this)}>\n         Login\n       </div>\n       <div\n         className={\"controller \" + (this.state.isRegisterOpen\n         ? \"selected-controller\"\n         : \"\")}\n         onClick={this\n         .showRegisterBox\n         .bind(this)}>\n         Register\n       </div>\n     </div>\n     <div className=\"box-cu\"> {\n      this.state.isLoginOpen && < Login showFirst={this.props.showFirst} />\n    } {\n      this.state.isRegisterOpen && < Register showFirst={this.props.showFirst}/>\n    }\n</div>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  constructor (props) {\r\n    super(props);    \r\n    this.state = {\r\n      title: '',\r\n      description: '',\r\n    };\r\n    this.InputChange = this.InputChange.bind(this);\r\n    this.Submit = this.Submit.bind(this);\r\n    this.exits = this.exits.bind(this);\r\n\r\n  }\r\n\r\n  Submit(e) {\r\n    e.preventDefault();\r\n    if(this.state.title||this.state.description !==''){\r\n      this.props.onAddTodo(this.state);\r\n      this.setState({\r\n        title: '',\r\n        description: '',\r\n      });\r\n    }\r\n    else{\r\n      alert('completa los campos faltantes')\r\n    }\r\n  }\r\n\r\n  InputChange(e) {\r\n    const {value, name} = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  exits(){\r\n    this.props.showSecond();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\" text-center row\">\r\n      <div className=\"col-md-12 card\">\r\n        <form onSubmit={this.Submit} className=\"card-body\">\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"title\"\r\n              className=\"form-control\"\r\n              value={this.state.title}\r\n              onChange={this.InputChange}\r\n              placeholder=\"Titulo\"\r\n              />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              className=\"form-control\"\r\n              value={this.state.description}\r\n              onChange={this.InputChange}\r\n              placeholder=\"Contenido\"\r\n              />\r\n          </div>     \r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Guardar\r\n          </button>\r\n          <input type='button' value='Salir' className=\"btn btn-danger ml-4\" onClick={this.exits}/>\r\n        </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\nimport { todos } from './todos.json';\nimport Form from './form/app';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      todos\n    }\n    this.upList = this.upList.bind(this);\n    this.complet = this.complet.bind(this);\n  }\n\n  removelist(index) {\n    console.log(index);\n    \n   if (window.confirm('Estas segur@ de eliminar esta lista?')) {\n    this.setState({\n    todos: this.state.todos.filter((e, i) => {\n    return i !== index\n      })\n    }); \n    } \n  }\n  complet(index){\n   if(document.getElementById(this.state.todos[index].title).hasAttribute('class')){\n    document.getElementById(this.state.todos[index].title).removeAttribute('class')\n   }\n   else{\n    document.getElementById(this.state.todos[index].title).setAttribute('class','change');\n   }\n  }\n \n  upList(todo) {\n    this.setState({\n      todos: [...this.state.todos, todo]\n    })\n  }\n\n  render() {\n    const todos = this.state.todos.map((todo, i) => {\n      return (\n        <div className=\"col-md-4\" key={i}>\n          <div className=\"card mt-4\">\n            <div className=\"card-title text-center\">\n              <h3>{todo.title}</h3>\n              <span className=\"badge badge-pill badge-danger ml-2\">\n                {todo.priority}\n              </span>\n            </div>\n            <div className=\"card-body\">\n            <div  id={todo.title}>\n            <p >{todo.description}</p>\n            </div>\n            </div>\n            <div className=\"card-footer text-center\">\n            <div className=\"row\">\n              <div className=\" col-6 col-md-6\">\n                <button\n                className=\"btn btn-danger\"\n                onClick={this.removelist.bind(this, i)}>\n                Borrar\n                </button>\n              </div>\n              <div className=\" col-6 col-md-6  text-center\">\n                <button\n                className=\"btn btn-warning text-white\"\n                onClick={this.complet.bind(this, i)}>\n                 Completada\n                </button> \n              </div>\n            <div/>\n            </div>\n          </div>\n          </div>\n          </div>\n      )\n    });\n    return (\n      <div className=\"App pt-3\">\n        <div className=\"container\">\n          <div className=\"row mt-4\">\n            <div className=\"col-md-12 text-center\">\n              <Form onAddTodo={this.upList} showSecond={this.props.showSecond}></Form>\n            </div>\n            <div className=\"col-md-12 d-flex justify-content-center align-items-center mt-3\">\n              <div className=\"row cuadro\">\n                {todos}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","import React, { Component } from 'react';\nimport Firstpage from './firstface/App';\nimport Secondpage from './secondface/App';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFirstpage: true,\n      isSecondpage: false\n    };\n  }\n  showFirstpage() {\n    document.getElementById('first').setAttribute('class','hidden');\n    document.getElementById('second').removeAttribute('class');\n  }\n  showSecondpage() {\n    document.getElementById('second').setAttribute('class','hidden');\n    document.getElementById('first').removeAttribute('class');\n  }\n  render() {\n    return (\n  <div >\n    <div  id='first' >\n      <Firstpage showFirst={this.showFirstpage} />\n    </div>\n    <div id='second' className='hidden'>\n      <Secondpage showSecond={this.showSecondpage} />\n    </div>\n  </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}